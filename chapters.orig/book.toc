\contentsline {chapter}{\numberline {1}Introduction}{13}{}%
\contentsline {section}{\numberline {1.1}About me}{14}{}%
\contentsline {section}{\numberline {1.2}Isn't Everything Documented On-line?}{17}{}%
\contentsline {section}{\numberline {1.3}Why Isn't the Material Open Source?}{17}{}%
\contentsline {section}{\numberline {1.4}Feedback}{17}{}%
\contentsline {section}{\numberline {1.5}Do you do anything for fun?}{17}{}%
\contentsline {section}{\numberline {1.6}Conventions}{18}{}%
\contentsline {subsection}{\numberline {1.6.1}What Error Checking?}{18}{}%
\contentsline {subsection}{\numberline {1.6.2}Source Code References}{19}{}%
\contentsline {subsection}{\numberline {1.6.3}Web References}{19}{}%
\contentsline {section}{\numberline {1.7}I Versus we vs ...}{19}{}%
\contentsline {section}{\numberline {1.8}Who Should Read This Book?}{20}{}%
\contentsline {section}{\numberline {1.9}What's in the Book?}{20}{}%
\contentsline {section}{\numberline {1.10}Why is Source Code Missing?}{23}{}%
\contentsline {section}{\numberline {1.11}KGDB Demonstrations}{23}{}%
\contentsline {section}{\numberline {1.12}Source Code Figures}{24}{}%
\contentsline {section}{\numberline {1.13}Acknowledgements}{24}{}%
\contentsline {chapter}{\numberline {2}File and Filesystem Programming}{27}{}%
\contentsline {section}{\numberline {2.1}Programming Standards and Portability}{27}{}%
\contentsline {subsection}{\numberline {2.1.1}What are all These Standards?}{28}{}%
\contentsline {subsection}{\numberline {2.1.2}LSB --- Linux Standard Base}{30}{}%
\contentsline {section}{\numberline {2.2}Manual Pages}{31}{}%
\contentsline {section}{\numberline {2.3}System Calls vs Library Functions -- an Overview}{32}{}%
\contentsline {section}{\numberline {2.4}Error Handling with \texttt {errno}}{33}{}%
\contentsline {section}{\numberline {2.5}File Types and Mode}{34}{}%
\contentsline {section}{\numberline {2.6}File Descriptors}{35}{}%
\contentsline {subsection}{\numberline {2.6.1}How Many Open Files?}{37}{}%
\contentsline {subsection}{\numberline {2.6.2}Closing Files}{37}{}%
\contentsline {subsection}{\numberline {2.6.3}Duplicating File Descriptors}{38}{}%
\contentsline {subsubsection}{An Example of Redirection}{38}{}%
\contentsline {subsection}{\numberline {2.6.4}Named Pipes}{41}{}%
\contentsline {section}{\numberline {2.7}Opening Files / Creating Files}{41}{}%
\contentsline {subsection}{\numberline {2.7.1}Open Flags}{42}{}%
\contentsline {section}{\numberline {2.8}Reading and Writing Files}{44}{}%
\contentsline {section}{\numberline {2.9}Vectored Reads and Writes}{45}{}%
\contentsline {section}{\numberline {2.10}File and Record Locking}{48}{}%
\contentsline {subsection}{\numberline {2.10.1}Advisory File Locking}{48}{}%
\contentsline {subsection}{\numberline {2.10.2}An Example of Advisory Locking}{49}{}%
\contentsline {subsection}{\numberline {2.10.3}Viewing Existing Locks}{52}{}%
\contentsline {subsection}{\numberline {2.10.4}Mandatory File Locking}{52}{}%
\contentsline {subsection}{\numberline {2.10.5}Open File Description Locks}{53}{}%
\contentsline {section}{\numberline {2.11}Synchronizing I/O Operations}{54}{}%
\contentsline {section}{\numberline {2.12}Direct I/O}{54}{}%
\contentsline {section}{\numberline {2.13}Sparse Files}{56}{}%
\contentsline {subsection}{\numberline {2.13.1}Sparse Files in Action}{56}{}%
\contentsline {subsection}{\numberline {2.13.2}Sparse File Example 1 --- Virtual Machines}{58}{}%
\contentsline {subsection}{\numberline {2.13.3}Sparse File Example 2 --- HSM Applications}{59}{}%
\contentsline {section}{\numberline {2.14}Buffered I/O and the Standard I/O Library}{59}{}%
\contentsline {subsection}{\numberline {2.14.1}The Standard I/O Library \texttt {FILE} Structure}{60}{}%
\contentsline {subsection}{\numberline {2.14.2}Analyzing the glibc Standard I/O Library}{63}{}%
\contentsline {section}{\numberline {2.15}Memory Mapped Files}{65}{}%
\contentsline {subsection}{\numberline {2.15.1}The \texttt {mmap(2)} / \texttt {munmap()} System Calls}{66}{}%
\contentsline {subsection}{\numberline {2.15.2}Other Mapped File Functions}{67}{}%
\contentsline {section}{\numberline {2.16}Asynchronous I/O}{68}{}%
\contentsline {subsection}{\numberline {2.16.1}Additional Async I/O Functions}{72}{}%
\contentsline {subsection}{\numberline {2.16.2}Performance Gains with Async I/O}{72}{}%
\contentsline {subsection}{\numberline {2.16.3}procfs Async I/O Information}{73}{}%
\contentsline {section}{\numberline {2.17}Truncating Files}{73}{}%
\contentsline {section}{\numberline {2.18}Multi-threaded Applications}{74}{}%
\contentsline {section}{\numberline {2.19}Directory Creation}{75}{}%
\contentsline {section}{\numberline {2.20}Hard Links and Symbolic Links}{75}{}%
\contentsline {subsection}{\numberline {2.20.1}Symbolic Links}{77}{}%
\contentsline {section}{\numberline {2.21}Extended Attributes}{77}{}%
\contentsline {subsection}{\numberline {2.21.1}Installing and Using Extended Attributes}{78}{}%
\contentsline {section}{\numberline {2.22}Inode Flags}{79}{}%
\contentsline {section}{\numberline {2.23}Reading Directory Entries}{79}{}%
\contentsline {subsection}{\numberline {2.23.1}A Simple Implementation of the \texttt {ls(1)} Command}{80}{}%
\contentsline {subsection}{\numberline {2.23.2}Other Directory Functions}{82}{}%
\contentsline {subsection}{\numberline {2.23.3}Directory Entries at the System Call Level}{84}{}%
\contentsline {section}{\numberline {2.24}File Notification}{84}{}%
\contentsline {section}{\numberline {2.25}Filesystem-level Programming Interfaces}{87}{}%
\contentsline {subsection}{\numberline {2.25.1}Mounting and Unmounting Filesystems}{87}{}%
\contentsline {subsection}{\numberline {2.25.2}Getting Filesystem Statistics}{88}{}%
\contentsline {subsection}{\numberline {2.25.3}Filesystem Sync}{89}{}%
\contentsline {subsection}{\numberline {2.25.4}Changing Filesystem Properties}{90}{}%
\contentsline {section}{\numberline {2.26}Conclusion}{90}{}%
\contentsline {chapter}{\numberline {3}Filesystems}{91}{}%
\contentsline {section}{\numberline {3.1}The Linux File Hierarchy}{91}{}%
\contentsline {section}{\numberline {3.2}How Simple it Used to be}{93}{}%
\contentsline {section}{\numberline {3.3}Filesystems, Disks and Partitions}{93}{}%
\contentsline {subsection}{\numberline {3.3.1}Filesystem On-disk Structure}{94}{}%
\contentsline {subsection}{\numberline {3.3.2}Referencing Data Blocks From The Inode}{95}{}%
\contentsline {subsection}{\numberline {3.3.3}Full Filesystem Check vs Journaling}{96}{}%
\contentsline {subsection}{\numberline {3.3.4}Disk Partitioning}{96}{}%
\contentsline {subsection}{\numberline {3.3.5}The GPT Disk Format}{97}{}%
\contentsline {subsection}{\numberline {3.3.6}Logical Volumes Managment}{98}{}%
\contentsline {subsection}{\numberline {3.3.7}Advantages of Logical Volume Management}{98}{}%
\contentsline {subsection}{\numberline {3.3.8}Linux LVM}{99}{}%
\contentsline {subsection}{\numberline {3.3.9}LVM Concepts}{100}{}%
\contentsline {section}{\numberline {3.4}ZFS -- Builtin Volume Management}{102}{}%
\contentsline {section}{\numberline {3.5}Filesystem Types Supported by Linux}{103}{}%
\contentsline {section}{\numberline {3.6}How Many Filesystems are Actually Used?}{104}{}%
\contentsline {section}{\numberline {3.7}Comparing the Main Filesystem Types}{105}{}%
\contentsline {subsection}{\numberline {3.7.1}The ext2/3/4 Filesystems}{105}{}%
\contentsline {subsection}{\numberline {3.7.2}The XFS Filesystems}{108}{}%
\contentsline {subsection}{\numberline {3.7.3}The btrfs Filesystems}{109}{}%
\contentsline {subsection}{\numberline {3.7.4}The Flash??? Filesystems}{110}{}%
\contentsline {subsection}{\numberline {3.7.5}Stratis - RHEL???}{110}{}%
\contentsline {section}{\numberline {3.8}Kernel or Userspace?}{110}{}%
\contentsline {section}{\numberline {3.9}Pseudo Filesystems}{111}{}%
\contentsline {subsection}{\numberline {3.9.1}The proc Filesystem}{112}{}%
\contentsline {subsection}{\numberline {3.9.2}The Ramfs Filesystem}{113}{}%
\contentsline {subsection}{\numberline {3.9.3}The tmpfs Filesystem}{114}{}%
\contentsline {subsection}{\numberline {3.9.4}The pipe Filesystem}{114}{}%
\contentsline {subsection}{\numberline {3.9.5}The AuFS Filesystem}{114}{}%
\contentsline {subsection}{\numberline {3.9.6}The OverlayFS Filesystem}{114}{}%
\contentsline {section}{\numberline {3.10}FUSE-based Filesystems}{114}{}%
\contentsline {subsection}{\numberline {3.10.1}Demonstrating the SSHFS FUSE Filesystem}{115}{}%
\contentsline {section}{\numberline {3.11}Physical Filesystems and Partitioning}{116}{}%
\contentsline {section}{\numberline {3.12}Linux Namespaces}{117}{}%
\contentsline {subsection}{\numberline {3.12.1}Shared Subtrees}{118}{}%
\contentsline {subsection}{\numberline {3.12.2}Root and \texttt {chroot} Environments}{119}{}%
\contentsline {subsection}{\numberline {3.12.3}Linux cgroups to Isolate and Manage Resources}{119}{}%
\contentsline {subsection}{\numberline {3.12.4}Mount Namespace Example}{120}{}%
\contentsline {subsection}{\numberline {3.12.5}Containers}{120}{}%
\contentsline {subsection}{\numberline {3.12.6}Creating a Container by Hand}{120}{}%
\contentsline {section}{\numberline {3.13}Filesystem Operations}{121}{}%
\contentsline {subsection}{\numberline {3.13.1}Making a Filesystem}{121}{}%
\contentsline {subsection}{\numberline {3.13.2}Mounting Filesystems}{122}{}%
\contentsline {subsection}{\numberline {3.13.3}The Mount Table}{122}{}%
\contentsline {subsection}{\numberline {3.13.4}Automounting Filesystems}{124}{}%
\contentsline {subsection}{\numberline {3.13.5}Unmounting Filesystems}{124}{}%
\contentsline {subsection}{\numberline {3.13.6}The \texttt {lsof(1)} Command}{124}{}%
\contentsline {subsection}{\numberline {3.13.7}Reporting File System Disk Space Usage}{125}{}%
\contentsline {subsection}{\numberline {3.13.8}Fixing Filesystems with \texttt {fsck}}{125}{}%
\contentsline {subsection}{\numberline {3.13.9}Filesystem Debugging}{126}{}%
\contentsline {section}{\numberline {3.14}Loopback Mounts}{127}{}%
\contentsline {subsection}{\numberline {3.14.1}Demonstrating Loopback Devices}{129}{}%
\contentsline {section}{\numberline {3.15}Client Caching With FS-Cache}{130}{}%
\contentsline {section}{\numberline {3.16}Network Filesystems}{131}{}%
\contentsline {subsection}{\numberline {3.16.1}NFS -- the Network File System}{131}{}%
\contentsline {section}{\numberline {3.17}Backup / restore}{134}{}%
\contentsline {subsection}{\numberline {3.17.1}Freezing and Thawing Filesystems}{134}{}%
\contentsline {section}{\numberline {3.18}Quotas}{135}{}%
\contentsline {subsection}{\numberline {3.18.1}An Example of Using Filesystem Quotas on Ubuntu}{136}{}%
\contentsline {section}{\numberline {3.19}Swap space}{138}{}%
\contentsline {section}{\numberline {3.20}The Boot Process and Run Levels}{140}{}%
\contentsline {subsection}{\numberline {3.20.1}Run Level Scipts}{140}{}%
\contentsline {section}{\numberline {3.21}Conclusion}{142}{}%
\contentsline {chapter}{\numberline {4}The Linux Kernel Source Code}{143}{}%
\contentsline {section}{\numberline {4.1}User-Space vs Kernel-Space}{147}{}%
\contentsline {section}{\numberline {4.2}The System Call Interface}{148}{}%
\contentsline {subsection}{\numberline {4.2.1}System Calls for File / Filesystem Activity}{150}{}%
\contentsline {subsection}{\numberline {4.2.2}Using \texttt {vim} and \texttt {ctags} to Browse the Kernel Source}{151}{}%
\contentsline {subsection}{\numberline {4.2.3}Using \texttt {cscope} to Browse the Kernel Source}{154}{}%
\contentsline {subsection}{\numberline {4.2.4}Using Elixir to Browse the Kernel Source}{156}{}%
\contentsline {subsection}{\numberline {4.2.5}Maintaining Your Own Notes}{156}{}%
\contentsline {section}{\numberline {4.3}File Access Structures}{158}{}%
\contentsline {subsection}{\numberline {4.3.1}File Descriptors}{159}{}%
\contentsline {subsection}{\numberline {4.3.2}The \texttt {fdtable} Structure}{160}{}%
\contentsline {subsection}{\numberline {4.3.3}The \texttt {file} Structure}{161}{}%
\contentsline {subsection}{\numberline {4.3.4}The \texttt {inode} Structure}{162}{}%
\contentsline {section}{\numberline {4.4}The Directory Cache}{163}{}%
\contentsline {subsection}{\numberline {4.4.1}Introducing The \texttt {dentry} Structure}{163}{}%
\contentsline {subsection}{\numberline {4.4.2}Dcache Hash Buckets}{166}{}%
\contentsline {subsection}{\numberline {4.4.3}KGDB -- Analyzing The Dcache}{167}{}%
\contentsline {subsection}{\numberline {4.4.4}Overriding / Supporting Dcache Operations}{169}{}%
\contentsline {section}{\numberline {4.5}The Inode Cache}{169}{}%
\contentsline {subsection}{\numberline {4.5.1}KGDB -- Analyzing Per-File Kernel Structures}{172}{}%
\contentsline {subsection}{\numberline {4.5.2}Analyzing Per-File Kernel Structures Using \texttt {crash}}{174}{}%
\contentsline {subsection}{\numberline {4.5.3}KGDB --- Multiple dentries Per Single File}{175}{}%
\contentsline {section}{\numberline {4.6}The Buffer Cache}{176}{}%
\contentsline {subsection}{\numberline {4.6.1}Buffer Cache Size / Usage}{178}{}%
\contentsline {subsection}{\numberline {4.6.2}Flushing Buffers}{179}{}%
\contentsline {section}{\numberline {4.7}The Page Cache}{179}{}%
\contentsline {subsection}{\numberline {4.7.1}The \texttt {page} Structure}{181}{}%
\contentsline {subsection}{\numberline {4.7.2}Compound Pages / Page Folios}{181}{}%
\contentsline {subsection}{\numberline {4.7.3}KGDB --- Analyzing Page Cache Structures}{183}{}%
\contentsline {subsection}{\numberline {4.7.4}Process Address Space}{184}{}%
\contentsline {section}{\numberline {4.8}Mounted Filesystem Structures}{185}{}%
\contentsline {subsection}{\numberline {4.8.1}The \texttt {superblock} and \texttt {mount} Structures}{186}{}%
\contentsline {subsection}{\numberline {4.8.2}The \texttt {vfsmount} Structure}{187}{}%
\contentsline {subsection}{\numberline {4.8.3}KGDB --- Analyzing the List of Mounted Filesystems}{187}{}%
\contentsline {section}{\numberline {4.9}Namespace Structures}{188}{}%
\contentsline {section}{\numberline {4.10}Conclusion}{189}{}%
\contentsline {chapter}{\numberline {5}Common Linux Types and Locks}{191}{}%
\contentsline {section}{\numberline {5.1}Lists}{191}{}%
\contentsline {subsection}{\numberline {5.1.1}An Unusual List Example}{191}{}%
\contentsline {section}{\numberline {5.2}Locks}{192}{}%
\contentsline {section}{\numberline {5.3}The \texttt {xarray} Structure}{193}{}%
\contentsline {subsection}{\numberline {5.3.1}The Big Kernel Lock (BKL}{193}{}%
\contentsline {subsection}{\numberline {5.3.2}Local Locks}{193}{}%
\contentsline {subsection}{\numberline {5.3.3}Semaphores}{193}{}%
\contentsline {subsection}{\numberline {5.3.4}Mutexes}{194}{}%
\contentsline {section}{\numberline {5.4}Black-Red Trees}{194}{}%
\contentsline {section}{\numberline {5.5}Wrapping Structures With \texttt {container\_of}}{194}{}%
\contentsline {section}{\numberline {5.6}Semaphores, Mutexes, And Lockless Algorithms}{196}{}%
\contentsline {section}{\numberline {5.7}Read-Copy Update (RCU) Synchronization}{197}{}%
\contentsline {section}{\numberline {5.8}Conclusion}{197}{}%
\contentsline {chapter}{\numberline {6}The VFS Layer}{199}{}%
\contentsline {section}{\numberline {6.1}The VFS Entry Point}{199}{}%
\contentsline {section}{\numberline {6.2}VFS to Filesystem Interfaces}{200}{}%
\contentsline {section}{\numberline {6.3}Registering Filesystems}{202}{}%
\contentsline {subsection}{\numberline {6.3.1}Unregistering Filesystems}{203}{}%
\contentsline {subsection}{\numberline {6.3.2}KGDB --- Analyzing the List of Registered Filesystems}{204}{}%
\contentsline {section}{\numberline {6.4}Mounting and Unmounting Filesystems}{205}{}%
\contentsline {subsection}{\numberline {6.4.1}Legacy Mounts}{206}{}%
\contentsline {subsection}{\numberline {6.4.2}Mounting Using Filesystem Context}{208}{}%
\contentsline {subsection}{\numberline {6.4.3}Mounting Filesystems at the VFS Layer}{210}{}%
\contentsline {subsection}{\numberline {6.4.4}KGDB -- A Look at Structures Following Mount}{213}{}%
\contentsline {subsection}{\numberline {6.4.5}Unmounting Filesystems}{214}{}%
\contentsline {section}{\numberline {6.5}Namespace Creation and Handling}{215}{}%
\contentsline {subsection}{\numberline {6.5.1}Handling \texttt {chroot(2)}}{215}{}%
\contentsline {section}{\numberline {6.6}KGDB -- Analyzing Mount Namespace Creation}{216}{}%
\contentsline {section}{\numberline {6.7}Opening a File / Pathname Resolution}{217}{}%
\contentsline {subsection}{\numberline {6.7.1}File Descriptor Allocation and File Table Expansion}{218}{}%
\contentsline {subsection}{\numberline {6.7.2}Allocating a \texttt {file} Structure}{220}{}%
\contentsline {subsection}{\numberline {6.7.3}KGDB -- Viewing File Descriptor Allocation}{220}{}%
\contentsline {section}{\numberline {6.8}Pathname Resolution}{221}{}%
\contentsline {subsection}{\numberline {6.8.1}Setting the Stage for Pathname Resolution}{223}{}%
\contentsline {subsection}{\numberline {6.8.2}Initialization Structures And Starting The Process}{225}{}%
\contentsline {subsection}{\numberline {6.8.3}The Nitty Gritty of Pathname Resolution}{226}{}%
\contentsline {subsection}{\numberline {6.8.4}Callers of \texttt {link\_path\_walk()}}{230}{}%
\contentsline {subsection}{\numberline {6.8.5}More on Hashing}{230}{}%
\contentsline {subsection}{\numberline {6.8.6}Handling a dcache Miss}{231}{}%
\contentsline {subsection}{\numberline {6.8.7}Crossing mount points}{231}{}%
\contentsline {subsection}{\numberline {6.8.8}Handling Symlinks}{234}{}%
\contentsline {subsection}{\numberline {6.8.9}Returning From \texttt {link\_path\_walk()}}{234}{}%
\contentsline {subsection}{\numberline {6.8.10}RCU-walk vs REF-walk}{235}{}%
\contentsline {subsection}{\numberline {6.8.11}KGDB -- Setting The Stage For Pathname Resolution}{236}{}%
\contentsline {subsection}{\numberline {6.8.12}KGDB -- Inside \texttt {link\_path\_walk()} and Friends}{239}{}%
\contentsline {subsection}{\numberline {6.8.13}KGDB -- Crossing Mount Points}{242}{}%
\contentsline {subsection}{\numberline {6.8.14}Further Information on Pathname Resolution}{244}{}%
\contentsline {section}{\numberline {6.9}Linux Dcache Implementation}{244}{}%
\contentsline {subsection}{\numberline {6.9.1}The Migration to RCU}{245}{}%
\contentsline {subsection}{\numberline {6.9.2}Linking Dentries Together}{245}{}%
\contentsline {subsection}{\numberline {6.9.3}The \texttt {dentry} State Diagram}{246}{}%
\contentsline {subsection}{\numberline {6.9.4}KGDB -- Monitoring dentry Transition State}{249}{}%
\contentsline {subsection}{\numberline {6.9.5}Digging Deeper on The Core Functions}{250}{}%
\contentsline {subsubsection}{\texttt {d\_alloc()}}{251}{}%
\contentsline {subsubsection}{\texttt {d\_alloc\_anon()}}{253}{}%
\contentsline {subsubsection}{\texttt {retain\_dentry()} and \texttt {d\_put}}{253}{}%
\contentsline {subsubsection}{\texttt {d\_splice\_alias} and \texttt {d\_instantiate()}}{254}{}%
\contentsline {subsubsection}{\texttt {d\_add()}}{255}{}%
\contentsline {subsubsection}{\texttt {d\_delete}}{255}{}%
\contentsline {subsubsection}{\texttt {d\_delete}}{256}{}%
\contentsline {subsubsection}{\texttt {dget}}{256}{}%
\contentsline {subsubsection}{\texttt {dput}}{256}{}%
\contentsline {subsubsection}{\texttt {d\_drop}}{256}{}%
\contentsline {subsubsection}{\texttt {d\_add}}{256}{}%
\contentsline {subsection}{\numberline {6.9.6}Pruning The Dcache}{256}{}%
\contentsline {subsection}{\numberline {6.9.7}KGDB -- Analyzing Dentries For a Simple File Hierarchy}{257}{}%
\contentsline {subsection}{\numberline {6.9.8}KGDB -- Inspecting the Per-Filesystem LRU List}{260}{}%
\contentsline {subsection}{\numberline {6.9.9}Dcache Statistics}{260}{}%
\contentsline {section}{\numberline {6.10}The Inode Cache Implementation}{261}{}%
\contentsline {subsection}{\numberline {6.10.1}Inode Locks}{261}{}%
\contentsline {section}{\numberline {6.11}The Buffer Cache Implementation}{261}{}%
\contentsline {section}{\numberline {6.12}File Creation}{261}{}%
\contentsline {subsection}{\numberline {6.12.1}Regular File Creation}{262}{}%
\contentsline {subsection}{\numberline {6.12.2}Creating Directories}{264}{}%
\contentsline {subsection}{\numberline {6.12.3}Creating Symbolic Links}{266}{}%
\contentsline {subsection}{\numberline {6.12.4}Creating Hard Links and Device Nodes}{267}{}%
\contentsline {section}{\numberline {6.13}Reading Directory Entries}{267}{}%
\contentsline {section}{\numberline {6.14}The Linux Page Cache}{269}{}%
\contentsline {subsection}{\numberline {6.14.1}Compound Pages}{269}{}%
\contentsline {subsection}{\numberline {6.14.2}Memory Folios}{271}{}%
\contentsline {subsection}{\numberline {6.14.3}Memory Mapped Files}{272}{}%
\contentsline {section}{\numberline {6.15}Reading Files}{272}{}%
\contentsline {subsection}{\numberline {6.15.1}The \texttt {new\_sync\_read()} and \texttt {generic\_file\_read\_iter()} Functions}{274}{}%
\contentsline {subsection}{\numberline {6.15.2}Vectored Reads}{275}{}%
\contentsline {section}{\numberline {6.16}Writing Files}{276}{}%
\contentsline {subsection}{\numberline {6.16.1}Vectored Writes}{276}{}%
\contentsline {section}{\numberline {6.17}Direct I/O}{277}{}%
\contentsline {section}{\numberline {6.18}File Locking Implementation}{277}{}%
\contentsline {section}{\numberline {6.19}Dissecting The proc Filesystem}{277}{}%
\contentsline {subsection}{\numberline {6.19.1}Use of Red-Black Trees in /proc}{278}{}%
\contentsline {subsection}{\numberline {6.19.2}KGDB --- Analyzing the \texttt {/proc} File Tree}{279}{}%
\contentsline {section}{\numberline {6.20}Quotas Implementation}{280}{}%
\contentsline {section}{\numberline {6.21}Handling Pipes}{280}{}%
\contentsline {section}{\numberline {6.22}Flushing File Data and Metadata}{280}{}%
\contentsline {section}{\numberline {6.23}Filesystem Interfaces}{280}{}%
\contentsline {subsection}{\numberline {6.23.1}The \texttt {super\_operations} Structure}{280}{}%
\contentsline {subsubsection}{Freeze/Thaw Functions}{281}{}%
\contentsline {subsubsection}{Information Gathering Functions}{282}{}%
\contentsline {subsubsection}{Qutoas-related Functions}{282}{}%
\contentsline {subsection}{\numberline {6.23.2}The \texttt {inode\_operations} Structure}{282}{}%
\contentsline {subsection}{\numberline {6.23.3}The \texttt {file\_operations} Structure}{283}{}%
\contentsline {subsection}{\numberline {6.23.4}The \texttt {address\_space\_operations} Structure}{285}{}%
\contentsline {subsubsection}{Memory Folio Functions}{285}{}%
\contentsline {subsubsection}{Blah blah Functions}{286}{}%
\contentsline {subsubsection}{Swapping Functions}{287}{}%
\contentsline {section}{\numberline {6.24}Conclusion}{287}{}%
\contentsline {chapter}{\numberline {7}Building a Linux Filesystem}{289}{}%
\contentsline {section}{\numberline {7.1}The SPFS on-disk Format}{290}{}%
\contentsline {section}{\numberline {7.2}A Note About Printing Pointers}{291}{}%
\contentsline {section}{\numberline {7.3}From Module Load to Mounting a Filesystem}{291}{}%
\contentsline {section}{\numberline {7.4}Initializing the per-filesystem Inode Cache}{293}{}%
\contentsline {subsection}{\numberline {7.4.1}KGDB - Analyzing Inode Lists for a Specific Mountpoint}{295}{}%
\contentsline {section}{\numberline {7.5}Mounting a Filesystem}{299}{}%
\contentsline {subsection}{\numberline {7.5.1}Inside \texttt {sp\_mount} and \texttt {sp\_fill\_super}}{300}{}%
\contentsline {section}{\numberline {7.6}SPFS super\_operations}{301}{}%
\contentsline {subsection}{\numberline {7.6.1}KGDB -- Analyzing the Effects of a Mount Operation}{301}{}%
\contentsline {section}{\numberline {7.7}Unmounting}{303}{}%
\contentsline {section}{\numberline {7.8}Creating a File}{304}{}%
\contentsline {section}{\numberline {7.9}Creating a File}{304}{}%
\contentsline {subsection}{\numberline {7.9.1}Inside \texttt {sp\_find\_entry()}}{305}{}%
\contentsline {subsection}{\numberline {7.9.2}Inside \texttt {sp\_create\_file()}}{307}{}%
\contentsline {subsection}{\numberline {7.9.3}Inside \texttt {sp\_new\_inode()}}{308}{}%
\contentsline {subsection}{\numberline {7.9.4}Inside \texttt {sp\_ialloc()}}{308}{}%
\contentsline {subsection}{\numberline {7.9.5}More on Negative dentries}{309}{}%
\contentsline {section}{\numberline {7.10}Creating a Directory}{309}{}%
\contentsline {subsection}{\numberline {7.10.1}KGDB -- Handling the \texttt {mkdir(2)} System Call}{311}{}%
\contentsline {section}{\numberline {7.11}Reading Directory Entries}{312}{}%
\contentsline {subsection}{\numberline {7.11.1}KGDB -- Kernel Paths for Reading Directories}{313}{}%
\contentsline {section}{\numberline {7.12}Writing to a File}{315}{}%
\contentsline {subsection}{\numberline {7.12.1}KGDB -- Handling the \texttt {write(2)} System Call}{317}{}%
\contentsline {section}{\numberline {7.13}Reading from a File}{320}{}%
\contentsline {subsection}{\numberline {7.13.1}KGDB -- Handling the \texttt {read(2)} System Call}{322}{}%
\contentsline {section}{\numberline {7.14}Memory Mapped Files}{324}{}%
\contentsline {section}{\numberline {7.15}Removing a File}{324}{}%
\contentsline {subsection}{\numberline {7.15.1}KGDB -- Handling the \texttt {unlink(2)} System Call}{326}{}%
\contentsline {section}{\numberline {7.16}Renaming a File}{327}{}%
\contentsline {subsection}{\numberline {7.16.1}KGDB -- Handling the \texttt {rename(2)} System Call}{327}{}%
\contentsline {section}{\numberline {7.17}Other Operations}{328}{}%
\contentsline {section}{\numberline {7.18}Obtaining Filesystem Information via statfs}{329}{}%
\contentsline {subsection}{\numberline {7.18.1}KGDB -- Handling the \texttt {statfs(2)} System Call}{330}{}%
\contentsline {section}{\numberline {7.19}Hard Links and Symbolic Links}{331}{}%
\contentsline {section}{\numberline {7.20}Integration with /proc}{332}{}%
\contentsline {section}{\numberline {7.21}The SPFS \texttt {fsdb} Command}{332}{}%
\contentsline {section}{\numberline {7.22}File Undelete}{334}{}%
\contentsline {subsection}{\numberline {7.22.1}Enhancing Undelete}{336}{}%
\contentsline {subsection}{\numberline {7.22.2}Why Undelete is More Complex Than you Might Think?}{336}{}%
\contentsline {section}{\numberline {7.23}How to Test SPFS}{337}{}%
\contentsline {subsection}{\numberline {7.23.1}Testing a Commercial Filesystem}{337}{}%
\contentsline {section}{\numberline {7.24}An Extended SPFS Filesystem}{338}{}%
\contentsline {section}{\numberline {7.25}Notes}{339}{}%
\contentsline {section}{\numberline {7.26}debugfs?}{339}{}%
\contentsline {section}{\numberline {7.27}Conclusion}{339}{}%
\contentsline {chapter}{\numberline {8}The FUSE Filesystem Framework}{341}{}%
\contentsline {section}{\numberline {8.1}A Background on FUSE}{341}{}%
\contentsline {section}{\numberline {8.2}Source Code Files}{343}{}%
\contentsline {subsection}{\numberline {8.2.1}Manual Pages}{343}{}%
\contentsline {subsection}{\numberline {8.2.2}Understanding \texttt {FUSE\_VERSION}}{343}{}%
\contentsline {section}{\numberline {8.3}The FUSE Architecture}{345}{}%
\contentsline {subsection}{\numberline {8.3.1}An Example to Get Started}{347}{}%
\contentsline {section}{\numberline {8.4}Digging Under The Covers}{348}{}%
\contentsline {subsection}{\numberline {8.4.1}FUSE Kernel Startup}{348}{}%
\contentsline {subsection}{\numberline {8.4.2}Establishing Connection between the Kernel and \texttt {libfuse}}{349}{}%
\contentsline {subsection}{\numberline {8.4.3}Mounting a \texttt {fuse} Filesystem}{351}{}%
\contentsline {subsection}{\numberline {8.4.4}General Flow Between Kernel and User-space}{352}{}%
\contentsline {subsection}{\numberline {8.4.5}FUSE VFS Interfaces}{353}{}%
\contentsline {subsection}{\numberline {8.4.6}FUSE to \texttt {libfuse} Request Queues}{356}{}%
\contentsline {subsection}{\numberline {8.4.7}Kernel to \texttt {libfuse} Messages}{359}{}%
\contentsline {subsection}{\numberline {8.4.8}Controlling FUSE Through \texttt {fusectl}}{360}{}%
\contentsline {subsection}{\numberline {8.4.9}Multithreading}{361}{}%
\contentsline {subsection}{\numberline {8.4.10}Time to FORGET}{362}{}%
\contentsline {subsection}{\numberline {8.4.11}FUSE Interrupts}{362}{}%
\contentsline {subsection}{\numberline {8.4.12}Per-File DAX Option}{363}{}%
\contentsline {subsection}{\numberline {8.4.13}The \texttt {fuseblk} Filesystem}{363}{}%
\contentsline {subsection}{\numberline {8.4.14}FUSE and Fsnotify}{364}{}%
\contentsline {subsection}{\numberline {8.4.15}User-space Character Devices}{364}{}%
\contentsline {section}{\numberline {8.5}More on \texttt {libfuse}}{364}{}%
\contentsline {subsection}{\numberline {8.5.1}The \texttt {fuse\_file\_info} Structure}{364}{}%
\contentsline {section}{\numberline {8.6}Implementing a FUSE-based Filesystem}{365}{}%
\contentsline {subsection}{\numberline {8.6.1}Installing FUSE and Compiling the Filesystem}{365}{}%
\contentsline {subsection}{\numberline {8.6.2}Getting Started}{365}{}%
\contentsline {subsection}{\numberline {8.6.3}Mounting the Filesystem}{366}{}%
\contentsline {subsection}{\numberline {8.6.4}Initialization and Startup}{368}{}%
\contentsline {subsection}{\numberline {8.6.5}What Happens During Filesystem Operations?}{369}{}%
\contentsline {subsection}{\numberline {8.6.6}Running pSPFS in The Background}{371}{}%
\contentsline {section}{\numberline {8.7}Example of Using The Low-level FUSE Interface}{372}{}%
\contentsline {subsection}{\numberline {8.7.1}TFS Definitions, Initialization and Startup}{373}{}%
\contentsline {subsection}{\numberline {8.7.2}TFS Startup and Initialization}{374}{}%
\contentsline {subsection}{\numberline {8.7.3}Updating the Kernel Inode Buffers}{375}{}%
\contentsline {subsection}{\numberline {8.7.4}TFS Operations}{376}{}%
\contentsline {subsection}{\numberline {8.7.5}Low-level FUSE Operation Definitions}{378}{}%
\contentsline {section}{\numberline {8.8}Adding Encryption to pSPFS}{378}{}%
\contentsline {subsection}{\numberline {8.8.1}A Primer on Encryption}{379}{}%
\contentsline {subsection}{\numberline {8.8.2}How The eSPFS Filesystem Works}{380}{}%
\contentsline {subsection}{\numberline {8.8.3}Extending eSPFS}{384}{}%
\contentsline {section}{\numberline {8.9}FUSE Performance}{384}{}%
\contentsline {subsection}{\numberline {8.9.1}Improving Performance with eBPF}{385}{}%
\contentsline {section}{\numberline {8.10}Conclusion}{386}{}%
\contentsline {chapter}{\numberline {9}Filesystem Debugging}{387}{}%
\contentsline {section}{\numberline {9.1}Kernel Debugging with kgdb}{387}{}%
\contentsline {subsection}{\numberline {9.1.1}Building a Kernel with kgdb Support}{388}{}%
\contentsline {subsection}{\numberline {9.1.2}Turning off Automatic Updates}{390}{}%
\contentsline {subsection}{\numberline {9.1.3}Connecting gdb to the Target VM}{390}{}%
\contentsline {subsection}{\numberline {9.1.4}\texttt {gdb} Command Reference}{391}{}%
\contentsline {subsection}{\numberline {9.1.5}Linux Kernel Helper Functions}{392}{}%
\contentsline {subsection}{\numberline {9.1.6}Basic \texttt {gdb} Examples}{393}{}%
\contentsline {subsection}{\numberline {9.1.7}Walking Lists}{394}{}%
\contentsline {subsection}{\numberline {9.1.8}Setting Breakpoints and Stepping Through Code}{394}{}%
\contentsline {subsection}{\numberline {9.1.9}Calling \texttt {container\_of()}}{396}{}%
\contentsline {subsection}{\numberline {9.1.10}Listing Source Code}{396}{}%
\contentsline {subsection}{\numberline {9.1.11}Getting Symbols From Loadable Modules}{397}{}%
\contentsline {subsection}{\numberline {9.1.12}A Script to Load Modules}{400}{}%
\contentsline {subsection}{\numberline {9.1.13}gdb User-Defined Commands}{401}{}%
\contentsline {subsection}{\numberline {9.1.14}I Want to Edit the Command History Using \texttt {vi}}{401}{}%
\contentsline {section}{\numberline {9.2}Exploring File/Filesystem Information with eBPF}{401}{}%
\contentsline {subsection}{\numberline {9.2.1}Tracing Kernel Functions with eBPF}{402}{}%
\contentsline {subsection}{\numberline {9.2.2}Warning}{403}{}%
\contentsline {section}{\numberline {9.3}Debugging With The \texttt {crash(8)} Command}{403}{}%
\contentsline {subsection}{\numberline {9.3.1}Installing \texttt {crash} and Linux Debugging Information}{404}{}%
\contentsline {subsection}{\numberline {9.3.2}Upgrading the Kernel}{405}{}%
\contentsline {subsection}{\numberline {9.3.3}Kernel Compilation Issues}{406}{}%
\contentsline {subsection}{\numberline {9.3.4}Running \texttt {crash}}{406}{}%
\contentsline {subsection}{\numberline {9.3.5}Exploring Lists With \texttt {crash}}{409}{}%
\contentsline {subsection}{\numberline {9.3.6}Equivalent of \texttt {container\_of()} With \texttt {crash}}{409}{}%
\contentsline {subsection}{\numberline {9.3.7}Exploring Trees With \texttt {crash}}{410}{}%
\contentsline {section}{\numberline {9.4}Conclusion}{410}{}%
\contentsline {chapter}{\numberline {10}Filesystem Security}{411}{}%
\contentsline {section}{\numberline {10.1}It Starts With File and Directory Permissions}{411}{}%
\contentsline {section}{\numberline {10.2}Encryption and Key Management}{411}{}%
\contentsline {subsection}{\numberline {10.2.1}Password-based Encryption}{413}{}%
\contentsline {subsection}{\numberline {10.2.2}Encryption Algorithms and Key Sizes}{413}{}%
\contentsline {subsection}{\numberline {10.2.3}Hardware Acceleration of AES}{413}{}%
\contentsline {subsection}{\numberline {10.2.4}Access Controls}{414}{}%
\contentsline {subsection}{\numberline {10.2.5}EKM -- Enterprise Key Management and FIPS}{414}{}%
\contentsline {subsection}{\numberline {10.2.6}Common Criteria}{415}{}%
\contentsline {subsection}{\numberline {10.2.7}HSMs -- Hardware Security Modules}{416}{}%
\contentsline {subsection}{\numberline {10.2.8}Protecting Keys Over the Wire}{416}{}%
\contentsline {subsection}{\numberline {10.2.9}Protecting Encryption Keys in Memory}{417}{}%
\contentsline {subsection}{\numberline {10.2.10}NIST Standards}{418}{}%
\contentsline {subsection}{\numberline {10.2.11}Keep it Simple --- Encrypt it Yourself}{418}{}%
\contentsline {section}{\numberline {10.3}Zero Blocks / Extents on Allocation or Free}{419}{}%
\contentsline {subsection}{\numberline {10.3.1}Fixing the Issue}{421}{}%
\contentsline {subsection}{\numberline {10.3.2}A DIY Solution}{422}{}%
\contentsline {section}{\numberline {10.4}Security is a Multi-Layered Approach}{423}{}%
\contentsline {section}{\numberline {10.5}SELinux}{423}{}%
\contentsline {section}{\numberline {10.6}AppArmor}{424}{}%
\contentsline {section}{\numberline {10.7}SELinux vs AppArmor}{424}{}%
\contentsline {section}{\numberline {10.8}Security Standards}{425}{}%
\contentsline {section}{\numberline {10.9}Secure Programming}{426}{}%
\contentsline {section}{\numberline {10.10}Conclusion}{427}{}%
\contentsline {chapter}{\numberline {11}Filesystem Performance}{429}{}%
\contentsline {section}{\numberline {11.1}Performance of Different Filesystems}{429}{}%
\contentsline {subsection}{\numberline {11.1.1}The Phoronix Study}{429}{}%
\contentsline {section}{\numberline {11.2}Mount Options}{430}{}%
\contentsline {section}{\numberline {11.3}Block Sizes}{430}{}%
\contentsline {section}{\numberline {11.4}Extend-based Allocation}{430}{}%
\contentsline {section}{\numberline {11.5}The Effects of Filesystem Fragmentation}{430}{}%
\contentsline {section}{\numberline {11.6}Open Flags etc etc}{430}{}%
\contentsline {section}{\numberline {11.7}Volume Management / Disk Subsystems}{430}{}%
\contentsline {section}{\numberline {11.8}Buffer Cache and Page Cache Tuning}{430}{}%
\contentsline {section}{\numberline {11.9}Other commands???}{430}{}%
\contentsline {section}{\numberline {11.10}The \texttt {sysstat} Package}{430}{}%
\contentsline {section}{\numberline {11.11}eBPF -- a New World of Opportunities}{432}{}%
\contentsline {subsection}{\numberline {11.11.1}BCC -- BPF Compiler Collection}{432}{}%
\contentsline {subsection}{\numberline {11.11.2}The \texttt {bpftrace} Command}{433}{}%
\contentsline {subsection}{\numberline {11.11.3}The Annual eBPF summit}{434}{}%
\contentsline {section}{\numberline {11.12}Conclusion}{434}{}%
\contentsline {chapter}{\numberline {12}Filesystem Case Studies}{435}{}%
\contentsline {section}{\numberline {12.1}The Extended Filesystems}{435}{}%
\contentsline {subsection}{\numberline {12.1.1}The ext4 Disk Layout}{435}{}%
\contentsline {subsubsection}{Extents}{435}{}%
\contentsline {subsection}{\numberline {12.1.2}ext4 Superblock}{436}{}%
\contentsline {subsection}{\numberline {12.1.3}ext4 Reserved Inodes}{436}{}%
\contentsline {subsection}{\numberline {12.1.4}Exploring on-disk ext4 Data Structures}{437}{}%
\contentsline {subsection}{\numberline {12.1.5}ext4 Journaling (jbd2)}{437}{}%
\contentsline {subsection}{\numberline {12.1.6}Analyzing the ext4 Journal}{438}{}%
\contentsline {section}{\numberline {12.2}XFS}{438}{}%
\contentsline {subsection}{\numberline {12.2.1}The XFS Disk Layout}{438}{}%
\contentsline {subsection}{\numberline {12.2.2}XFS Journaling}{439}{}%
\contentsline {subsection}{\numberline {12.2.3}Analyzing the XFS Journal}{439}{}%
\contentsline {section}{\numberline {12.3}The btrfs Filesystems}{439}{}%
\contentsline {subsection}{\numberline {12.3.1}The btrfs Disk Layout}{440}{}%
\contentsline {subsection}{\numberline {12.3.2}btrfs COW vs Journaling}{440}{}%
\contentsline {section}{\numberline {12.4}NFS}{440}{}%
\contentsline {subsection}{\numberline {12.4.1}Standardization and Protocols}{440}{}%
\contentsline {subsection}{\numberline {12.4.2}Client-side NFS Handling}{440}{}%
\contentsline {subsection}{\numberline {12.4.3}Server-side NFS Handling}{440}{}%
\contentsline {subsection}{\numberline {12.4.4}NFS Locking}{440}{}%
\contentsline {subsection}{\numberline {12.4.5}NFS File Delegation}{440}{}%
\contentsline {subsection}{\numberline {12.4.6}Other NFS Implementations}{440}{}%
\contentsline {section}{\numberline {12.5}Conclusion}{441}{}%
\contentsline {chapter}{\numberline {13}Filesystem Forensics}{443}{}%
\contentsline {section}{\numberline {13.1}Conclusion}{443}{}%
